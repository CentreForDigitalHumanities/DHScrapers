services:
  harvest:
    image: ghcr.io/centrefordigitalhumanities/dh-scrapers-iis:latest
    user: "1000:0" # need this to check rootless
    volumes:
      - type: bind
        source: ./volumes/harvest-metadata
        target: /harvest-metadata
      - type: bind
        source: ./volumes/iis-files
        target: /iis-files
    command: /scripts/export-newest.sh
  parse:
    image: ghcr.io/centrefordigitalhumanities/dh-scrapers-basescraper:latest
    user: "1000:0" # need this to check rootless
    volumes:
      - type: bind
        source: ./volumes/harvest-metadata
        target: /harvest-metadata
      - type: bind
        source: ./volumes/iis-files
        target: /iis-files
      - type: bind
        source: ./volumes/output
        target: /output
    stdin_open: true
    tty: true
    command: python -m iis --import_folder /iis-files --export_folder /output

#   prepare_postprocess:
#     image: FROM docker.io/library/alpine:3
#     depends_on:
#       parse:
#         condition: service_completed_successfully
#     environment:
#       - JOB=JOB
#     volumes:
#       - type: bind
#         source: ./check_progress.sh
#         target: /check_progress.sh
#       - type: bind
#         source: $OUTPUT_FOLDER
#         target: /output
#       - type: bind
#         source: $OUTPUT_POSTPROCESSED
#         target: /postprocessed
      
#     command: sh check_progress.sh

#   postprocess:
#     image: atomgraph/saxon
#     platform: linux/amd64
#     environment:
#       - JOB=JOB
#     depends_on:
#       prepare_postprocess:
#         condition: service_completed_successfully
#     volumes:
#       - epidoc-stylesheets:/xsl
#       - type: bind
#         source: $OUTPUT_FOLDER/$JOB
#         target: /output
#       - type: bind
#         source: $OUTPUT_POSTPROCESSED/$JOB
#         target: /postprocessed
#     command: -s:/output -xsl:/xsl/start-txt.xsl -o:/postprocessed

# volumes:
#   iis-files:
#   epidoc-stylesheets: